// ==============================
// Cryo Laser Lourd (Overclockable)
// ==============================
// Inspiré des lasers lourds overclock vanilla, simplifié.

OVERCLOCK
{
    HEAT_PER_SHOT = 300
    FIRE_RATE_FACTOR = 140%
    POWER_USE_FACTOR = 175%
    DAMAGE_FACTOR = 165%
    FROZEN_DURATION = 8s
}

Part : <../base_part_terran_overclock.rules>/Part
{
    NameKey = "Parts/CryoLaserHeavy"
    DescriptionKey = "Parts/CryoLaserHeavyDesc"
    ID = matimeo.cryo_laser_heavy
    EditorGroup = "WeaponsEnergy"
    Size = [2,4]
    PhysicalRect = [0,1,2,3]
    SaveRect = &PhysicalRect
    Icon = "sprites/cryo_laser_heavy.png"
    Resources [ [steel,72] [coil,24] [crystal,10] ]
    TypeCategories = [weapon, uses_power]
    MaxHealth = 9000
    InitialPenetrationResistance = 2
    AllowedDoorLocations [ [-1,3] [2,3] [1,4] [0,4] ]

    Components
    {
        IsOperational { Type = MultiToggle Toggles = [PowerToggle, BatteryStorage] Mode = All }
        PowerToggle { Type = UIToggle ToggleID = "on_off" Default = 1 }

        BatteryStorage { Type = ResourceStorage ResourceType = battery MaxResources = 10000 }
        BatteryConsumer { Type = ResourceConsumer ResourceType = battery Storage = BatteryStorage ResupplyThreshold = 1200 OperationalToggle = IsOperational }

        OverclockModeToggle { Type = UIToggle ToggleID = "overclock" Default = 0 }
        IsOverclocked { Type = ToggleProxy Toggle = OverclockModeToggle }

        Turret
        {
            Type = TurretWeapon
            Location = [1,0.8]
            Rotation = -90d
            OperationalToggle = IsOperational
            FiringArc = 170d
            RotateSpeed = 55d
            FireInterval { BaseValue = 2.0 Modifiers [ { Type = BuffRemap Toggle = OverclockModeToggle RemapFrom=[0,1] RemapTo=[1,( &~/OVERCLOCK/FIRE_RATE_FACTOR )] ModificationMode = Divide } ] }
            Emitter = WeaponEmitterSelector
        }

        WeaponEmitterSelector { Type = ToggleEmitterSelector Toggle = IsOverclocked ToggleOffEmitter = BeamEmitterBase ToggleOnEmitter = BeamEmitterOverclock }

        BeamEmitterBase
        {
            Type = BeamEmitter
            ChainedTo = Turret
            FireTrigger = Turret
            Location = [1,0]
            OperationalToggle = IsOperational
            BeamTexture = "sprites/cryo_beam.png"
            Range = 190
            Width = 0.5
            DamagePerSecond = 32
            Warmup = 0.3
            PowerUsePerSecond = 40
            OnHitApplyStatusEffects [ { ID = frozen Duration = 5s } ]
            ThermalEffect { TemperatureDeltaPerSecond = -45 Radius = 2 }
            // Pénétration lente continue
            ContinuousDamagePenetration = 0.6
        }

        BeamEmitterOverclock : BeamEmitterBase
        {
            DamagePerSecond = (&^/0/DamagePerSecond) * (&~/OVERCLOCK/DAMAGE_FACTOR)
            PowerUsePerSecond = (&^/0/PowerUsePerSecond) * (&~/OVERCLOCK/POWER_USE_FACTOR)
            Width = 0.65
            OnHitApplyStatusEffects [ { ID = frozen Duration = (&~/OVERCLOCK/FROZEN_DURATION) } ]
            ThermalEffect { TemperatureDeltaPerSecond = -70 Radius = 2.3 }
        }

        ChargeEffect
        {
            Type = TriggeredEffects
            ChainedTo = Turret
            Trigger = Turret
            Location = [1.1,0]
            MediaEffects [ : /BASE_SOUNDS/AudioExterior { Sound = "charge.wav" Volume = .8 } ]
        }

        FireEffect
        {
            Type = TriggeredEffects
            ChainedTo = Turret
            Trigger = WeaponEmitterSelector
            Location = [1.1,0]
            MediaEffects [ : /BASE_SOUNDS/AudioExterior { Sound = "beam_loop.wav" Volume = .85 } ]
        }

        OverclockIndicator { Type = IndicatorSprite Location = [1,2.2] Toggle = OverclockModeToggle Sprite { File = &/INDICATORS/Overclock Size = [1,1] } }
        DestroyedEffects { Type = DeathEffects MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed Location = [1,2] }
    }

    Stats
    {
        PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources)/1000
        BaseDPS = &~/Part/Components/BeamEmitterBase/DamagePerSecond
        OverclockDPS = (&BaseDPS) * (&~/OVERCLOCK/DAMAGE_FACTOR)
        Range = &~/Part/Components/BeamEmitterBase/Range
    }

    StatsByCategory
    [
        { Name = "CryoHeavy" Stats { DPS = &~/Part/Stats/BaseDPS OverclockDPS = &~/Part/Stats/OverclockDPS Range = &~/Part/Stats/Range PowerPerSecond = &~/Part/Components/BeamEmitterBase/PowerUsePerSecond OverclockPowerPerSecond = (&PowerPerSecond) * (&~/OVERCLOCK/POWER_USE_FACTOR) } }
    ]
}